BEGIN
    READ the number of intermediate code lines
    FOR each line:
        READ the three-address code
        GENERATE equivalent assembly/machine instructions:
            MOVE first operand to a register
            PERFORM the operation (+, -, *, /) with the second operand
            STORE the result in the target variable
    PRINT the generated machine code
END



#include <stdio.h>
#include <stdlib.h>

int main() {
    int n, i;
    char a[50][10];

    // Get number of three-address codes
    printf("Enter the number of intermediate code lines: ");
    scanf("%d", &n);
    getchar(); // Consume newline character

    // Read intermediate code
    for (i = 0; i < n; i++) {
        printf("Enter the three-address code %d: ", i + 1);
        fgets(a[i], sizeof(a[i]), stdin);
    }

    // Generate assembly-like code
    printf("\nGenerated Assembly Code:\n");
    for (i = 0; i < n; i++) {
        printf("\nMOV %c, R%d", a[i][2], i); // Move first operand to register

        // Perform the operation
        if (a[i][3] == '+')
            printf("\nADD %c, R%d", a[i][4], i);
        else if (a[i][3] == '-')
            printf("\nSUB %c, R%d", a[i][4], i);
        else if (a[i][3] == '*')
            printf("\nMUL %c, R%d", a[i][4], i);
        else if (a[i][3] == '/')
            printf("\nDIV %c, R%d", a[i][4], i);

        printf("\nMOV R%d, %c\n", i, a[i][0]); // Store result in target variable
    }

    return 0;
}




Enter the number of intermediate code lines: 2
Enter the three-address code 1: a=b+c
Enter the three-address code 2: d=n*d





Generated Assembly Code:

MOV b, R0
ADD c, R0
MOV R0, a

MOV n, R1
MUL d, R1
MOV R1, d
