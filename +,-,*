BEGIN
    FUNCTION validateOperator(string input):
        FOR each character in input:
            IF character == '+' OR character == '-' OR character == '*' THEN
                PRINT "Valid operator:", character
            ELSE
                PRINT "Invalid operator"
            ENDIF
        END FOR
END
#include <stdio.h>
#include <conio.h>

int main() {
    char s[5];  // Character array to store operator input

    // Prompt the user for input
    printf("\nEnter any operator: ");
    gets(s);

    // Identify the operator
    switch (s[0]) {
        case '>':
            if (s[1] == '=')
                printf("\nGreater than or equal");
            else
                printf("\nGreater than");
            break;

        case '<':
            if (s[1] == '=')
                printf("\nLess than or equal");
            else
                printf("\nLess than");
            break;

        case '=':
            if (s[1] == '=')
                printf("\nEqual to");
            else
                printf("\nAssignment");
            break;

        case '!':
            if (s[1] == '=')
                printf("\nNot Equal");
            else
                printf("\nBit Not");
            break;

        case '&':
            if (s[1] == '&')
                printf("\nLogical AND");
            else
                printf("\nBitwise AND");
            break;

        case '|':
            if (s[1] == '|')
                printf("\nLogical OR");
            else
                printf("\nBitwise OR");
            break;

        case '+':
            printf("\nAddition");
            break;

        case '-':
            printf("\nSubtraction");
            break;

        case '*':
            printf("\nMultiplication");
            break;

        case '/':
            printf("\nDivision");
            break;

        case '%':
            printf("\nModulus");
            break;

        default:
            printf("\nNot an operator");
    }

    return 0;
}


Input: <=
Output: Less than or equal

Input: +
Output: Addition

Input: &&
Output: Logical AND

Input: #
Output: Not an operator

